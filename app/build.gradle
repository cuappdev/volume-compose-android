plugins {
    id('com.android.application')
    id('com.google.gms.google-services')
    id('kotlin-android')
    id("kotlin-kapt")
    id("dagger.hilt.android.plugin")
    id('com.apollographql.apollo3').version('3.1.0')
    id('com.google.protobuf').version('0.8.17')
    id('kotlin-parcelize')
}

def secretsPropertiesFile = rootProject.file('secrets.properties')
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsPropertiesFile))

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.cornellappdev.android.volume"
        minSdk 27
        targetSdk 33
        versionCode 2
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "FEEDBACK_FORM", secretsProperties['FEEDBACK_FORM'])
        buildConfigField("String", "WEBSITE", secretsProperties['WEBSITE'])

        vectorDrawables {
            useSupportLibrary true
        }
        compileOptions {
            sourceCompatibility = JavaVersion.VERSION_11
            targetCompatibility = JavaVersion.VERSION_11
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue("bool", "FIREBASE_ANALYTICS_DEACTIVATED", "false")
            buildConfigField("String", "ENDPOINT", secretsProperties['PROD_ENDPOINT'])
        }
        debug {
            debuggable true
            resValue("bool", "FIREBASE_ANALYTICS_DEACTIVATED", "true")
            buildConfigField("String", "ENDPOINT", secretsProperties['DEV_ENDPOINT'])
        }
    }

    compileOptions {
        // Hilt uses Java 8 features so it must be enabled in our project.
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xjvm-default=all",
                "-opt-in=kotlin.RequiresOptIn"
        ]
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerVersion "1.6.0"
        kotlinCompilerExtensionVersion "1.1.0-beta04"
    }


    namespace 'com.cornellappdev.android.volume'
}

kapt {
    correctErrorTypes = true
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'com.google.android.material:material:1.8.0-alpha01'
    implementation 'androidx.compose.material3:material3:1.0.0-beta01'
    implementation 'androidx.compose.ui:ui:1.2.1'
    implementation 'androidx.compose.ui:ui-tooling:1.2.1'
    implementation 'androidx.compose.foundation:foundation:1.2.1'
    implementation 'androidx.compose.material:material:1.2.1'
    implementation 'androidx.compose.material:material-icons-core:1.2.1'
    implementation 'androidx.compose.material:material-icons-extended:1.2.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation 'androidx.compose.runtime:runtime-livedata:1.2.1'
    implementation 'androidx.compose.runtime:runtime-rxjava2:1.2.1'
    implementation 'com.apollographql.apollo3:apollo-runtime:3.1.0'
    implementation 'com.squareup.okhttp3:okhttp'
    implementation("com.squareup.moshi:moshi-kotlin:1.14.0")
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-compose:2.5.1'

    implementation 'io.coil-kt:coil-compose:2.1.0'
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "androidx.datastore:datastore-core:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:3.21.1"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.0.2')
    implementation 'com.google.firebase:firebase-inappmessaging-display-ktx'
    implementation 'com.google.accompanist:accompanist-permissions:0.27.0'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Accompanist
    implementation 'com.google.accompanist:accompanist-pager:0.26.2-beta'
    implementation 'com.google.accompanist:accompanist-pager-indicators:0.26.2-beta'
    implementation "com.google.accompanist:accompanist-webview:0.26.2-beta"
    implementation 'com.google.accompanist:accompanist-navigation-animation:0.26.2-beta'

    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.1.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'

    // Hilt
    // Implementation and kapt must be in-sync version number
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-android-compiler:2.42"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.activity:activity-ktx:1.1.0"

    // Bouqet (PDF Viewing)
    implementation 'io.github.grizzi91:bouquet:1.0.1'

    // Moshi (JSON Parsing)
//    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.6.0'
}

apollo {
    packageName.set("com.cornellappdev.android.volume")
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.20.0-rc-1"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

